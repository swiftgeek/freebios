
arch i386
mainboardinit cpu/i386/entry16.inc
mainboardinit cpu/i386/entry32.inc
ldscript cpu/i386/entry16.lds
mainboardinit cpu/i386/reset16.inc
ldscript cpu/i386/reset16.lds

mainboardinit northbridge/intel/440gx/reset_test.inc

mainboardinit superio/NSC/pc87309/setup_serial.inc
mainboardinit pc80/serial.inc
mainboardinit arch/i386/lib/console.inc


#
# Inspired by the cache as ram testing...
#

biosbase 0xffff0000
rambase 0x00000800
option XIP_ROM_BASE=0xffff0000
option XIP_ROM_SIZE=0x10000
option STACK_SIZE=0x2000

#######
## Testing of the cache ram idea on a PIII
#######

option CACHE_RAM_BASE=0xfff00000
option CACHE_RAM_SIZE=0x00010000
option USE_CACHE_RAM=1
nooption USE_DEFAULT_LAYOUT
option RAMTEST=1

mainboardinit cpu/i786/earlymtrr.inc
#mainboardinit ram/ramtest.inc
mainboardinit cpu/p6/cache_ram_init.inc
#mainboardinit mainboard/supermicro/p4dc6/cache_test.inc
mainboardinit cpu/p6/cache_ram_start.inc
mainboardinit cpu/p6/cache_ram_fini.inc

option USE_GENERIC_SDRAM=1
option USE_GENERIC_SDRAM_ENABLE=1
option USE_PIIX4E_SMBUS=1
option USE_GENERIC_DUMP_SPD=1
option USE_GENERIC_ZERO_ECC_SDRAM=1
option USE_RAMTEST=1
object mainboard_raminit.c

option SMBUS_MEM_DEVICE_START=0x50
option SMBUS_MEM_DEVICE_END=0x53
option SMBUS_MEM_DEVICE_INC=1
dir /src/sdram
dir /src/ram


#######

northbridge intel/440gx
southbridge intel/piix4e
#mainboardinit cpu/p6/earlymtrr.inc

superio NSC/pc87309

option ENABLE_FIXED_AND_VARIABLE_MTRRS
option PIIX4_DEVFN=0x90
option NO_KEYBOARD
option ZKERNEL_START=0xfff40000
option ZKERNEL_MASK=0x3ed 
option L440GX
option IOAPIC=1
option SMP=1
option MAX_CPUS=2
option HAVE_MP_TABLE=1
option HAVE_PIRQ_TABLE=1

object mainboard.o
object mptable.o
object irq_tables.o HAVE_PIRQ_TABLE


cpu p6
cpu p5

makerule phlash_floppy: phlash ; mcopy -o /tmp/$(PHLASH_BASE_NAME).bi? a:

makerule phlash: $(BOOT_IMAGE) linuxbios.rom headers ; rm -f xa?
addaction phlash split -b 64k $(BOOT_IMAGE)
addaction phlash # Now just touch them if we have a really
addaction phlash # small kernel!
addaction phlash touch xaa xab xac xad xae xaf xag xah
addaction phlash # this is starting at bank 4, and proceeding on. Unused banks are dups
addaction phlash # the nvram is odd, all of the banks are interleaved
addaction phlash cat $(PHLASH_BASE_NAME).bi1.header xaa > $(PHLASH_BASE_NAME).bi1 #4
addaction phlash cat $(PHLASH_BASE_NAME).bi3.header xab > $(PHLASH_BASE_NAME).bi3 #6
addaction phlash cat $(PHLASH_BASE_NAME).bi2.header xac > $(PHLASH_BASE_NAME).bi2 #7
addaction phlash cat $(PHLASH_BASE_NAME).bi4.header xad > $(PHLASH_BASE_NAME).bi4 #9
addaction phlash cat $(PHLASH_BASE_NAME).bi7.header xae > $(PHLASH_BASE_NAME).bi7 #a
addaction phlash cat $(PHLASH_BASE_NAME).bi6.header xaf > $(PHLASH_BASE_NAME).bi6 #b
addaction phlash cat $(PHLASH_BASE_NAME).bi9.header xag > $(PHLASH_BASE_NAME).bi9 #c
addaction phlash cat $(PHLASH_BASE_NAME).bi8.header xah > $(PHLASH_BASE_NAME).bi8 #d
addaction phlash cat $(PHLASH_BASE_NAME).bia.header linuxbios.rom > $(PHLASH_BASE_NAME).bia
addaction phlash # Part o & 5 seem not to be written reliably for some reason... 
addaction phlash cat $(PHLASH_BASE_NAME).bio.header /dev/null > $(PHLASH_BASE_NAME).bio
addaction phlash cat $(PHLASH_BASE_NAME).bi5.header /dev/null > $(PHLASH_BASE_NAME).bi5
addaction phlash sh -x $(TOP)/src/mainboard/intel/l440gx/BUILD_PHLASH_FILES $(PHLASH_BASE_NAME)

makerule headers : $(PHLASH_BASE_NAME).bi1.header $(PHLASH_BASE_NAME).bi2.header $(PHLASH_BASE_NAME).bi3.header $(PHLASH_BASE_NAME).bi4.header $(PHLASH_BASE_NAME).bi5.header $(PHLASH_BASE_NAME).bi6.header $(PHLASH_BASE_NAME).bi7.header $(PHLASH_BASE_NAME).bi8.header $(PHLASH_BASE_NAME).bi9.header $(PHLASH_BASE_NAME).bia.header $(PHLASH_BASE_NAME).bio.header ;

makerule $(PHLASH_BASE_NAME).bi1.header: $(TOP)/../intel_flash_disk/$(PHLASH_BASE_NAME).bi1 ; dd if=$< of=$@ bs=1 count=160
makerule $(PHLASH_BASE_NAME).bi2.header: $(TOP)/../intel_flash_disk/$(PHLASH_BASE_NAME).bi2 ; dd if=$< of=$@ bs=1 count=160
makerule $(PHLASH_BASE_NAME).bi3.header: $(TOP)/../intel_flash_disk/$(PHLASH_BASE_NAME).bi3 ; dd if=$< of=$@ bs=1 count=160
makerule $(PHLASH_BASE_NAME).bi4.header: $(TOP)/../intel_flash_disk/$(PHLASH_BASE_NAME).bi4 ; dd if=$< of=$@ bs=1 count=160
makerule $(PHLASH_BASE_NAME).bi5.header: $(TOP)/../intel_flash_disk/$(PHLASH_BASE_NAME).bi5 ; dd if=$< of=$@ bs=1 count=160
makerule $(PHLASH_BASE_NAME).bi6.header: $(TOP)/../intel_flash_disk/$(PHLASH_BASE_NAME).bi6 ; dd if=$< of=$@ bs=1 count=160
makerule $(PHLASH_BASE_NAME).bi7.header: $(TOP)/../intel_flash_disk/$(PHLASH_BASE_NAME).bi7 ; dd if=$< of=$@ bs=1 count=160
makerule $(PHLASH_BASE_NAME).bi8.header: $(TOP)/../intel_flash_disk/$(PHLASH_BASE_NAME).bi8 ; dd if=$< of=$@ bs=1 count=160
makerule $(PHLASH_BASE_NAME).bi9.header: $(TOP)/../intel_flash_disk/$(PHLASH_BASE_NAME).bi9 ; dd if=$< of=$@ bs=1 count=160
makerule $(PHLASH_BASE_NAME).bia.header: $(TOP)/../intel_flash_disk/$(PHLASH_BASE_NAME).bia ; dd if=$< of=$@ bs=1 count=160
makerule $(PHLASH_BASE_NAME).bio.header: $(TOP)/../intel_flash_disk/$(PHLASH_BASE_NAME).bio ; dd if=$< of=$@ bs=1 count=160

addaction clean rm -f $(PHLASH_BASE_NAME)* xa?
